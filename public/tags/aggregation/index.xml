<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Aggregation on Leandro Ordóñez Ante</title>
    <link>http://localhost:1313/tags/aggregation/</link>
    <description>Recent content in Aggregation on Leandro Ordóñez Ante</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 17 Oct 2019 10:45:27 +0200</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/aggregation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Continuous aggregation in Kafka Streams</title>
      <link>http://localhost:1313/ideas/continuous-aggregation-kafka-streams/</link>
      <pubDate>Thu, 17 Oct 2019 10:45:27 +0200</pubDate>
      <guid>http://localhost:1313/ideas/continuous-aggregation-kafka-streams/</guid>
      <description>Lago el Bolsón in Popayán, Colombia, my home town :)&#xA;In this post I show a method to address the computation of the arithmetic mean of an stream of values (say sensor readings) using the Kafka Streams DSL. The estimation of the average in a stream processing setting implies keeping track of other two measurements, namely the count of incoming records and the sum of their corresponding values. Let&amp;rsquo;s consider a Kafka streams application consuming messages from a topic to which the readings of multiple temperature sensors are being posted (temperature-readings).</description>
    </item>
  </channel>
</rss>
